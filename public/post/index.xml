<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on Abnormal Distributions</title>
    <link>/post/</link>
    <description>Recent content in Posts on Abnormal Distributions</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sun, 09 Aug 2020 00:00:00 +0000</lastBuildDate><atom:link href="/post/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Three underrated data science skills</title>
      <link>/post/2020/08/09/top-data-science-skills/</link>
      <pubDate>Sun, 09 Aug 2020 00:00:00 +0000</pubDate>
      
      <guid>/post/2020/08/09/top-data-science-skills/</guid>
      <description>Dynamic expansion of skillsPersuasionEmpathyConclusionThis short post lists three critical data science skills that I feel don’t receive enough attention. Do a quick Google search for “top data science skills” and you will find a lot of conversation around programming, statistics, machine learning, and data visualization. Like many, in the earlier stages of my career I focused solely on developing these technical skills. To be clear, these are important skills that data scientists should strive to possess (to varying degrees).</description>
    </item>
    
    <item>
      <title>Bottom-level forecasting using machine learning: Isolated series vs. Global methods</title>
      <link>/post/2020/07/26/bottom-level-forecasting-isolated-series-vs-cross-sectional/</link>
      <pubDate>Sun, 26 Jul 2020 00:00:00 +0000</pubDate>
      
      <guid>/post/2020/07/26/bottom-level-forecasting-isolated-series-vs-cross-sectional/</guid>
      <description>a.sourceLine { display: inline-block; line-height: 1.25; }a.sourceLine { pointer-events: none; color: inherit; text-decoration: inherit; }a.sourceLine:empty { height: 1.2em; }.sourceCode { overflow: visible; }code.sourceCode { white-space: pre; position: relative; }div.sourceCode { margin: 1em 0; }pre.sourceCode { margin: 0; }@media screen {div.sourceCode { overflow: auto; }}@media print {code.sourceCode { white-space: pre-wrap; }a.sourceLine { text-indent: -1em; padding-left: 1em; }}pre.</description>
    </item>
    
    <item>
      <title>Distributed machine learning on AWS using the SageMaker SDK in Python</title>
      <link>/post/2020/07/23/distributed-machine-learning-training-on-aws/</link>
      <pubDate>Thu, 23 Jul 2020 00:00:00 +0000</pubDate>
      
      <guid>/post/2020/07/23/distributed-machine-learning-training-on-aws/</guid>
      <description>Overview I recently participated in the M5 Forecasting - Accuracy Kaggle competition to forecast daily sales for over 30,000 WalMart products. I had some initial struggles processing the data and training models in-memory, so I eventually turned to running distributed training jobs using AWS SageMaker.
This post outlines the basic steps required to run a distributed machine learning job on AWS using the SageMaker SDK in Python. The steps are broken down into the following:</description>
    </item>
    
    <item>
      <title>A template for comparing point forecasts using traditional models, Prophet, and supervised machine learning</title>
      <link>/post/2020/07/12/time-series-forecasting-as-a-supervised-machine-learning-problem/</link>
      <pubDate>Sun, 12 Jul 2020 00:00:00 +0000</pubDate>
      
      <guid>/post/2020/07/12/time-series-forecasting-as-a-supervised-machine-learning-problem/</guid>
      <description>a.sourceLine { display: inline-block; line-height: 1.25; }a.sourceLine { pointer-events: none; color: inherit; text-decoration: inherit; }a.sourceLine:empty { height: 1.2em; }.sourceCode { overflow: visible; }code.sourceCode { white-space: pre; position: relative; }div.sourceCode { margin: 1em 0; }pre.sourceCode { margin: 0; }@media screen {div.sourceCode { overflow: auto; }}@media print {code.sourceCode { white-space: pre-wrap; }a.sourceLine { text-indent: -1em; padding-left: 1em; }}pre.</description>
    </item>
    
    <item>
      <title>My top 6% solution in the Kaggle M5 Forecasting - Accuracy competition using a machine learning ensemble</title>
      <link>/post/2020/07/08/forecasting-demand-for-30-000-walmart-products/</link>
      <pubDate>Wed, 08 Jul 2020 00:00:00 +0000</pubDate>
      
      <guid>/post/2020/07/08/forecasting-demand-for-30-000-walmart-products/</guid>
      <description>OverviewCompetition overviewForecasting as a supervised machine learning problemGeneral feature engineeringModelsOne model per product using Random ForestsOne model per store using XGBoostModel performance with and without ensemblingSummary of my development and evaluation strategyPotential improvementsConclusionDisclaimer: The final competition leaderboard shows my score in the 46th percentile. I made a rookie mistake and failed to submit my (then) best model, which would have put my ranking in the top 28%.</description>
    </item>
    
    <item>
      <title>Evaluating forecast models using rolling origin cross validation</title>
      <link>/post/2020/06/29/rolling-origin-cross-validation-in-r-with-facebook-prophet-and-rsample/</link>
      <pubDate>Mon, 29 Jun 2020 00:00:00 +0000</pubDate>
      
      <guid>/post/2020/06/29/rolling-origin-cross-validation-in-r-with-facebook-prophet-and-rsample/</guid>
      <description>a.sourceLine { display: inline-block; line-height: 1.25; }a.sourceLine { pointer-events: none; color: inherit; text-decoration: inherit; }a.sourceLine:empty { height: 1.2em; }.sourceCode { overflow: visible; }code.sourceCode { white-space: pre; position: relative; }div.sourceCode { margin: 1em 0; }pre.sourceCode { margin: 0; }@media screen {div.sourceCode { overflow: auto; }}@media print {code.sourceCode { white-space: pre-wrap; }a.sourceLine { text-indent: -1em; padding-left: 1em; }}pre.</description>
    </item>
    
    <item>
      <title>Segmenting Medicare STAR measures based on time-based trends in the distributions of contract scores</title>
      <link>/post/2020/06/18/clustering-medicare-star-measures-using-time-based-statistics/</link>
      <pubDate>Thu, 18 Jun 2020 00:00:00 +0000</pubDate>
      
      <guid>/post/2020/06/18/clustering-medicare-star-measures-using-time-based-statistics/</guid>
      <description>a.sourceLine { display: inline-block; line-height: 1.25; }a.sourceLine { pointer-events: none; color: inherit; text-decoration: inherit; }a.sourceLine:empty { height: 1.2em; }.sourceCode { overflow: visible; }code.sourceCode { white-space: pre; position: relative; }div.sourceCode { margin: 1em 0; }pre.sourceCode { margin: 0; }@media screen {div.sourceCode { overflow: auto; }}@media print {code.sourceCode { white-space: pre-wrap; }a.sourceLine { text-indent: -1em; padding-left: 1em; }}pre.</description>
    </item>
    
    <item>
      <title>Quantifying &#34;month composition&#34; to improve monthly forecasts</title>
      <link>/post/2020/06/17/monthly-forecasts-using-effective-days-r/</link>
      <pubDate>Wed, 17 Jun 2020 00:00:00 +0000</pubDate>
      
      <guid>/post/2020/06/17/monthly-forecasts-using-effective-days-r/</guid>
      <description>a.sourceLine { display: inline-block; line-height: 1.25; }a.sourceLine { pointer-events: none; color: inherit; text-decoration: inherit; }a.sourceLine:empty { height: 1.2em; }.sourceCode { overflow: visible; }code.sourceCode { white-space: pre; position: relative; }div.sourceCode { margin: 1em 0; }pre.sourceCode { margin: 0; }@media screen {div.sourceCode { overflow: auto; }}@media print {code.sourceCode { white-space: pre-wrap; }a.sourceLine { text-indent: -1em; padding-left: 1em; }}pre.</description>
    </item>
    
    <item>
      <title>Quantifying &#34;month composition&#34; to improve monthly forecasts (Python)</title>
      <link>/post/2020/06/17/applying-calendar-adjustments-to-improve-monthly-health-insurance-claims-forecasts-python/</link>
      <pubDate>Wed, 17 Jun 2020 00:00:00 +0000</pubDate>
      
      <guid>/post/2020/06/17/applying-calendar-adjustments-to-improve-monthly-health-insurance-claims-forecasts-python/</guid>
      <description>a.sourceLine { display: inline-block; line-height: 1.25; }a.sourceLine { pointer-events: none; color: inherit; text-decoration: inherit; }a.sourceLine:empty { height: 1.2em; }.sourceCode { overflow: visible; }code.sourceCode { white-space: pre; position: relative; }div.sourceCode { margin: 1em 0; }pre.sourceCode { margin: 0; }@media screen {div.sourceCode { overflow: auto; }}@media print {code.sourceCode { white-space: pre-wrap; }a.sourceLine { text-indent: -1em; padding-left: 1em; }}pre.</description>
    </item>
    
    <item>
      <title>A strategy for rare class learning using data-centric ensembling</title>
      <link>/post/2020/06/07/rare-class-ensemble/</link>
      <pubDate>Sun, 07 Jun 2020 00:00:00 +0000</pubDate>
      
      <guid>/post/2020/06/07/rare-class-ensemble/</guid>
      <description>a.sourceLine { display: inline-block; line-height: 1.25; }a.sourceLine { pointer-events: none; color: inherit; text-decoration: inherit; }a.sourceLine:empty { height: 1.2em; }.sourceCode { overflow: visible; }code.sourceCode { white-space: pre; position: relative; }div.sourceCode { margin: 1em 0; }pre.sourceCode { margin: 0; }@media screen {div.sourceCode { overflow: auto; }}@media print {code.sourceCode { white-space: pre-wrap; }a.sourceLine { text-indent: -1em; padding-left: 1em; }}pre.</description>
    </item>
    
    <item>
      <title>Object detection using AWS SageMaker and GluonCV </title>
      <link>/post/2019/12/07/object-detection-using-aws-sagemaker-and-gluoncv/</link>
      <pubDate>Sat, 07 Dec 2019 00:00:00 +0000</pubDate>
      
      <guid>/post/2019/12/07/object-detection-using-aws-sagemaker-and-gluoncv/</guid>
      <description>This post briefly describes how I built an object detection model using AWS SageMaker and GluonCV to detect Blue Cross Blue Shield logos. Full code and notebooks can be found in the GitHub repo.
Collecting and preparing training images To collect images for training, I searched Google for &amp;ldquo;bluecross blueshied logo&amp;rdquo;, &amp;ldquo;bluecross blueshield letter&amp;rdquo;, &amp;ldquo;bluecross blueshield building&amp;rdquo;, &amp;ldquo;bluecross blueshield shirt&amp;rdquo;, &amp;ldquo;bluecross blueshield event&amp;rdquo;, &amp;ldquo;bluecross blueshield shirt&amp;rdquo;, and &amp;ldquo;bluecross blueshield bus&amp;rdquo;. The logos in the images varied in size, shape, angle, clarity, and background.</description>
    </item>
    
    <item>
      <title>Text classification using sparse matrices, bag of words, TF-IDF, and penalized logistic regression</title>
      <link>/post/2019/02/17/text-classification-using-text2vec/</link>
      <pubDate>Sun, 17 Feb 2019 00:00:00 +0000</pubDate>
      
      <guid>/post/2019/02/17/text-classification-using-text2vec/</guid>
      <description>a.sourceLine { display: inline-block; line-height: 1.25; }a.sourceLine { pointer-events: none; color: inherit; text-decoration: inherit; }a.sourceLine:empty { height: 1.2em; }.sourceCode { overflow: visible; }code.sourceCode { white-space: pre; position: relative; }div.sourceCode { margin: 1em 0; }pre.sourceCode { margin: 0; }@media screen {div.sourceCode { overflow: auto; }}@media print {code.sourceCode { white-space: pre-wrap; }a.sourceLine { text-indent: -1em; padding-left: 1em; }}pre.</description>
    </item>
    
  </channel>
</rss>
