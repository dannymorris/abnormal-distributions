<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on Abnormal Distributions</title>
    <link>/post/</link>
    <description>Recent content in Posts on Abnormal Distributions</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sun, 20 Jan 2019 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="/post/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Using Flask to deploy predictive models</title>
      <link>/post/2019/01/20/using-flask-to-deploy-predictive-models/</link>
      <pubDate>Sun, 20 Jan 2019 00:00:00 +0000</pubDate>
      
      <guid>/post/2019/01/20/using-flask-to-deploy-predictive-models/</guid>
      <description>PurposeMy setupCreate and activate conda environmentInstall dependenciesVery simple Flask appRun the appTest the appPurposeDeploying predictive models is one of the toughest challenges that data scientists face. There currently exists an abundance of resources geared towards model development, but the opposite is true for model deployment.
In this article, I document my experience deploying a machine learning model using Flask, a web development framework for Python.</description>
    </item>
    
    <item>
      <title>Comparing down-sampling to no sampling for classifying imbalanced data</title>
      <link>/post/2018/12/17/comparing-down-sampling-to-no-sampling-for-classifying-imbalanced-data/</link>
      <pubDate>Mon, 17 Dec 2018 00:00:00 +0000</pubDate>
      
      <guid>/post/2018/12/17/comparing-down-sampling-to-no-sampling-for-classifying-imbalanced-data/</guid>
      <description>R packagesDataTrain/test splitDown-sample training dataTraining parametersTraining on down-sampled training dataTraining on full training dataComparing ROC of models on validation setsComparing ROC of models on test setSession infoIn this article, we’ll explore the In the context of binary classification, data is said to be imbalanced when one of the classes is vastly under-represented. The popular Kaggle credit card fraud dataset will be used.</description>
    </item>
    
    <item>
      <title>A specific comparison of feature engineering in R and Python</title>
      <link>/post/2018/01/09/a-specific-comparison-of-feature-engineering-in-r-and-python/</link>
      <pubDate>Tue, 09 Jan 2018 00:00:00 +0000</pubDate>
      
      <guid>/post/2018/01/09/a-specific-comparison-of-feature-engineering-in-r-and-python/</guid>
      <description>PurposeOriginal dataFeatures to engineerRPythonPurposeMoving from raw data to data that is prime for analysis is called feature engineering and it is a fundamental aspect of data science. Experienced data scientists will agree that feature engineering is an essential skill.
This article demonstrates the same engineering pipeline written in R and Python. The pipeline is not particularly complicated, though it resembles something that a data scientist would do.</description>
    </item>
    
    <item>
      <title>Getting started with Python in R Markdown using the reticulate package</title>
      <link>/post/2018/01/09/getting-started-with-python-in-r-markdown-using-the-reticulate-package/</link>
      <pubDate>Tue, 09 Jan 2018 00:00:00 +0000</pubDate>
      
      <guid>/post/2018/01/09/getting-started-with-python-in-r-markdown-using-the-reticulate-package/</guid>
      <description>AboutInstall and load reticulateUsing conda environmentsInstalling Python librariesWriting Python code in R MarkdownAboutOne of my current goals is to gain basic familiarity with Python as a data science language. I’ve spent some time recently working with Pandas, seaborn, and sci-kit learn. I’ve had a pleasant experience working in the Spyder IDE. Still, nothing beats R Markdown for creating highly polished, reproducible documents and analyses.</description>
    </item>
    
  </channel>
</rss>